{"version":3,"sources":["meteor://ðŸ’»app/imports/api/stuff/Stuff.js","meteor://ðŸ’»app/imports/startup/server/Accounts.js","meteor://ðŸ’»app/imports/startup/server/Mongo.js","meteor://ðŸ’»app/imports/startup/server/Publications.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Stuffs","StuffSchema","Mongo","link","v","SimpleSchema","default","Tracker","Collection","name","String","quantity","Number","owner","condition","type","allowedValues","defaultValue","tracker","attachSchema","Meteor","Accounts","Roles","createUser","email","password","role","console","log","userID","username","addUsersToRoles","users","find","count","settings","defaultAccounts","map","addData","data","insert","defaultData","publish","userId","findOne","ready","userIsInRole"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\nimport SimpleSchema from 'simpl-schema';\r\nimport { Tracker } from 'meteor/tracker';\r\n\r\n/** Define a Mongo collection to hold the data. */\r\nconst Stuffs = new Mongo.Collection('Stuffs');\r\n\r\n/** Define a schema to specify the structure of each document in the collection. */\r\nconst StuffSchema = new SimpleSchema({\r\n  name: String,\r\n  quantity: Number,\r\n  owner: String,\r\n  condition: {\r\n    type: String,\r\n    allowedValues: ['excellent', 'good', 'fair', 'poor'],\r\n    defaultValue: 'good',\r\n  },\r\n}, { tracker: Tracker });\r\n\r\n/** Attach this schema to the collection. */\r\nStuffs.attachSchema(StuffSchema);\r\n\r\n/** Make the collection and schema available to other code. */\r\nexport { Stuffs, StuffSchema };\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Accounts } from 'meteor/accounts-base';\r\nimport { Roles } from 'meteor/alanning:roles';\r\n\r\n/* eslint-disable no-console */\r\n\r\nfunction createUser(email, password, role) {\r\n  console.log(`  Creating user ${email}.`);\r\n  const userID = Accounts.createUser({\r\n    username: email,\r\n    email: email,\r\n    password: password,\r\n  });\r\n  if (role === 'admin') {\r\n    Roles.addUsersToRoles(userID, 'admin');\r\n  }\r\n}\r\n\r\n/** When running app for first time, pass a settings file to set up a default user account. */\r\nif (Meteor.users.find().count() === 0) {\r\n  if (Meteor.settings.defaultAccounts) {\r\n    console.log('Creating the default user(s)');\r\n    Meteor.settings.defaultAccounts.map(({ email, password, role }) => createUser(email, password, role));\r\n  } else {\r\n    console.log('Cannot initialize the database!  Please invoke meteor with a settings file.');\r\n  }\r\n}\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Stuffs } from '../../api/stuff/Stuff.js';\r\n\r\n/* eslint-disable no-console */\r\n\r\n/** Initialize the database with a default data document. */\r\nfunction addData(data) {\r\n  console.log(`  Adding: ${data.name} (${data.owner})`);\r\n  Stuffs.insert(data);\r\n}\r\n\r\n/** Initialize the collection if empty. */\r\nif (Stuffs.find().count() === 0) {\r\n  if (Meteor.settings.defaultData) {\r\n    console.log('Creating default data.');\r\n    Meteor.settings.defaultData.map(data => addData(data));\r\n  }\r\n}\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Roles } from 'meteor/alanning:roles';\r\nimport { Stuffs } from '../../api/stuff/Stuff';\r\n\r\n/** This subscription publishes only the documents associated with the logged in user */\r\nMeteor.publish('Stuff', function publish() {\r\n  if (this.userId) {\r\n    const username = Meteor.users.findOne(this.userId).username;\r\n    return Stuffs.find({ owner: username });\r\n  }\r\n  return this.ready();\r\n});\r\n\r\n/** This subscription publishes all documents regardless of user, but only if the logged in user is the Admin. */\r\nMeteor.publish('StuffAdmin', function publish() {\r\n  if (this.userId && Roles.userIsInRole(this.userId, 'admin')) {\r\n    return Stuffs.find();\r\n  }\r\n  return this.ready();\r\n});\r\n","import '/imports/startup/server/Accounts';\r\nimport '/imports/startup/server/Publications';\r\nimport '/imports/startup/server/Mongo';\r\n"]}